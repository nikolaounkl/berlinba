{"version":3,"sources":["contexts/TeamContext.js","components/Teams.js","components/Links.js","App.js","serviceWorker.js","index.js"],"names":["TeamContext","createContext","data","id","conference","abbreviation","TeamContextProvider","props","useState","teams","filter","team","east","west","Provider","value","children","Teams","useContext","className","src","alt","height","map","key","uuid","href","target","rel","Links","GlobalStyle","createGlobalStyle","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.52395378.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\r\n\r\nexport const TeamContext = createContext();\r\n\r\nconst data = [\r\n\t{\r\n\t\tid: 1,\r\n\t\tconference: \"east\",\r\n\t\tabbreviation: \"hawks\"\r\n\t},\r\n\t{\r\n\t\tid: 2,\r\n\t\tconference: \"east\",\r\n\t\tabbreviation: \"celtics\"\r\n\t},\r\n\t{\r\n\t\tid: 3,\r\n\t\tconference: \"east\",\r\n\t\tabbreviation: \"nets\"\r\n\t},\r\n\t{\r\n\t\tid: 4,\r\n\t\tconference: \"east\",\r\n\t\tabbreviation: \"hornets\"\r\n\t},\r\n\t{\r\n\t\tid: 5,\r\n\t\tconference: \"east\",\r\n\t\tabbreviation: \"bulls\"\r\n\t},\r\n\t{\r\n\t\tid: 6,\r\n\t\tconference: \"east\",\r\n\t\tabbreviation: \"cavaliers\"\r\n\t},\r\n\t{\r\n\t\tid: 7,\r\n\t\tconference: \"west\",\r\n\t\tabbreviation: \"mavericks\"\r\n\t},\r\n\t{\r\n\t\tid: 8,\r\n\t\tconference: \"west\",\r\n\t\tabbreviation: \"nuggets\"\r\n\t},\r\n\t{\r\n\t\tid: 9,\r\n\t\tconference: \"east\",\r\n\t\tabbreviation: \"pistons\"\r\n\t},\r\n\t{\r\n\t\tid: 10,\r\n\t\tconference: \"west\",\r\n\t\tabbreviation: \"warriors\"\r\n\t},\r\n\t{\r\n\t\tid: 11,\r\n\t\tconference: \"west\",\r\n\t\tabbreviation: \"rockets\"\r\n\t},\r\n\t{\r\n\t\tid: 12,\r\n\t\tconference: \"east\",\r\n\t\tabbreviation: \"pacers\"\r\n\t},\r\n\t{\r\n\t\tid: 13,\r\n\t\tconference: \"west\",\r\n\t\tabbreviation: \"clippers\"\r\n\t},\r\n\t{\r\n\t\tid: 14,\r\n\t\tconference: \"west\",\r\n\t\tabbreviation: \"lakers\"\r\n\t},\r\n\t{\r\n\t\tid: 15,\r\n\t\tconference: \"west\",\r\n\t\tabbreviation: \"grizzlies\"\r\n\t},\r\n\t{\r\n\t\tid: 16,\r\n\t\tconference: \"east\",\r\n\t\tabbreviation: \"heat\"\r\n\t},\r\n\t{\r\n\t\tid: 17,\r\n\t\tconference: \"east\",\r\n\t\tabbreviation: \"bucks\"\r\n\t},\r\n\t{\r\n\t\tid: 18,\r\n\t\tconference: \"west\",\r\n\t\tabbreviation: \"timberwolves\"\r\n\t},\r\n\t{\r\n\t\tid: 19,\r\n\t\tconference: \"west\",\r\n\t\tabbreviation: \"pelicans\"\r\n\t},\r\n\t{\r\n\t\tid: 20,\r\n\t\tconference: \"east\",\r\n\t\tabbreviation: \"knicks\"\r\n\t},\r\n\t{\r\n\t\tid: 21,\r\n\t\tconference: \"west\",\r\n\t\tabbreviation: \"thunder\"\r\n\t},\r\n\t{\r\n\t\tid: 22,\r\n\t\tconference: \"east\",\r\n\t\tabbreviation: \"magic\"\r\n\t},\r\n\t{\r\n\t\tid: 23,\r\n\t\tconference: \"east\",\r\n\t\tabbreviation: \"sixers\"\r\n\t},\r\n\t{\r\n\t\tid: 24,\r\n\t\tconference: \"west\",\r\n\t\tabbreviation: \"suns\"\r\n\t},\r\n\t{\r\n\t\tid: 25,\r\n\t\tconference: \"west\",\r\n\t\tabbreviation: \"blazers\"\r\n\t},\r\n\t{\r\n\t\tid: 26,\r\n\t\tconference: \"west\",\r\n\t\tabbreviation: \"kings\"\r\n\t},\r\n\t{\r\n\t\tid: 27,\r\n\t\tconference: \"west\",\r\n\t\tabbreviation: \"spurs\"\r\n\t},\r\n\t{\r\n\t\tid: 28,\r\n\t\tconference: \"east\",\r\n\t\tabbreviation: \"raptors\"\r\n\t},\r\n\t{\r\n\t\tid: 29,\r\n\t\tconference: \"west\",\r\n\t\tabbreviation: \"jazz\"\r\n\t},\r\n\t{\r\n\t\tid: 30,\r\n\t\tconference: \"east\",\r\n\t\tabbreviation: \"wizards\"\r\n\t}\r\n];\r\n\r\nconst TeamContextProvider = props => {\r\n\tconst [teams] = useState(data);\r\n\tconst [east] = useState(teams.filter(team => team.conference === \"east\"));\r\n\tconst [west] = useState(teams.filter(team => team.conference === \"west\"));\r\n\r\n\treturn (\r\n\t\t<TeamContext.Provider value={{ teams, west, east }}>\r\n\t\t\t{props.children}\r\n\t\t</TeamContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default TeamContextProvider;\r\n","import React, { useContext } from \"react\";\r\nimport { TeamContext } from \"../contexts/TeamContext\";\r\nimport uuid from \"uuid/v1\";\r\n\r\nconst Teams = () => {\r\n\tconst { teams } = useContext(TeamContext);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<img src=\"img/west.png\" alt=\"west\" height=\"150\" />\r\n\t\t\t\t<img src=\"img/east.png\" alt=\"east\" height=\"150\" />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"teams\">\r\n\t\t\t\t{teams.map(team => (\r\n\t\t\t\t\t<div key={uuid()} className=\"team smooth\">\r\n\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\thref={`https://www.nba.com/teams/${team.abbreviation}`}\r\n\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={`img/${team.abbreviation}.png`}\r\n\t\t\t\t\t\t\t\talt={`${team.abbreviation}`}\r\n\t\t\t\t\t\t\t\theight=\"100\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Teams;\r\n","import React from \"react\";\r\nimport { FaYoutube, FaChartBar, FaUsers } from \"react-icons/fa\";\r\nimport { GiTrophy } from \"react-icons/gi\";\r\n\r\nconst Links = () => {\r\n    return (\r\n        <div className=\"links\">\r\n            <a\r\n                href=\"https://www.youtube.com/watch?v=RzhTiAq5IrU&list=PL5j8RirTTnK6SwgRfls1MbJqCFgmxRu-3&index=1\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n            >\r\n                <FaYoutube className=\"icon smooth\" />\r\n            </a>\r\n            <a\r\n                href=\"https://www.nba.com/standings\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n            >\r\n                <GiTrophy className=\"icon smooth\" />\r\n            </a>\r\n            <a\r\n                href=\"https://stats.nba.com/teams/\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n            >\r\n                <FaChartBar className=\"icon smooth\" />\r\n            </a>\r\n            <a\r\n                href=\"https://stats.nba.com/players/\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n            >\r\n                <FaUsers className=\"icon smooth\" />\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Links;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport TeamContextProvider from \"./contexts/TeamContext\";\r\nimport Teams from \"./components/Teams\";\r\nimport Links from \"./components/Links\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\tbody {\r\n\t\tmargin: 0;\r\n\t\tpadding: 20px 0;\r\n\t\tbox-sizing: border-box;\r\n\t\tfont-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\",\r\n\t\t\t\"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\",\r\n\t\t\t\"Helvetica Neue\", sans-serif;\r\n\t\t-webkit-font-smoothing: antialiased;\r\n\t\t-moz-osx-font-smoothing: grayscale;\r\n\t\tcolor: white;\r\n\t\tmin-height: 100vh;\r\n\t\tbackground: url(\"img/nba_bg.jpg\") center center;\r\n\t\tbackground-attachment: fixed;\r\n\t\tbackground-size: cover;\r\n\t\tbackground-repeat: no-repeat;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t}\r\n`;\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<TeamContextProvider>\r\n\t\t\t\t<GlobalStyle />\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<Teams />\r\n\t\t\t\t</div>\r\n\t\t\t\t<br />\r\n\t\t\t\t<Links />\r\n\t\t\t</TeamContextProvider>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === \"localhost\" ||\r\n\t\t// [::1] is the IPv6 localhost address.\r\n\t\twindow.location.hostname === \"[::1]\" ||\r\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\r\n\t\twindow.location.hostname.match(\r\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n\t\t)\r\n);\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener(\"load\", () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\r\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not localhost. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tif (installingWorker == null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\r\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\r\n\t\t\t\t\t\t\t// content until all client tabs are closed.\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\r\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl)\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tconst contentType = response.headers.get(\"content-type\");\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n\t\t\t\t(contentType != null &&\r\n\t\t\t\t\tcontentType.indexOf(\"javascript\") === -1)\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif (\"serviceWorker\" in navigator) {\r\n\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\tregistration.unregister();\r\n\t\t});\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}